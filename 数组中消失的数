class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& nums) {
        for(int i=0;i<nums.size();i++)
        {
            nums[abs(nums[i])-1]=-abs(nums[abs(nums[i])-1]);
        }
        vector<int>v;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]>0)
            v.push_back(i+1);
        }
        return v;
    }
};
//鸽笼原理，将数组当前值    对应下标位置的数置换成负数，相当于将鸽笼占领，最后还有整数的下标则是我们缺少的数字
//注意，重复出现的值会使已经置为负数的值变为整数，所以注意取到绝对值。
